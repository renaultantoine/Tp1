// Java project (for build)
apply plugin: 'java'

// For Eclipse editor
apply plugin: 'eclipse'

// For Intelij editor
apply plugin: 'idea'

apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'jdepend'

repositories{
	mavenCentral();
	jcenter();
}

dependencies{
	compile 'joda-time:joda-time:2.10'
	testCompile('junit:junit:4.12')
	

}

def gradleExtra="${project.rootDir}/gradle/script"
def reportDir="${project.buildDir}/reports"

check.dependsOn 'cpd'

pmd {
    pmdTest.enabled = false
    ruleSets = ["java-basic",
      "java-braces",
      "java-clone",
      "java-codesize",
      "java-comments",
      "java-controversial",
      "java-coupling",
      "java-design",
      "java-empty",
      "java-finalizers",
      "java-imports",
      "java-naming",
      "java-optimizations",
      "java-strings",
      "java-unusedcode"]
//    toolVersion = '5.8.1'
//    ruleSetFiles = files("${gradleExtra}/pmd_rules_lvl1.xml")
    ignoreFailures = true
}

checkstyle {
    toolVersion = "7.8.1"
    ignoreFailures = true
}

jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
}

jdepend{
    ignoreFailures = true
    toolVersion = "1.9.11"
}

tasks.withType(Pmd) {
    reports {
        xml.enabled true
        html.enabled true
    }
}


task cpd {
    doLast {
        def cpdOutputDir = new File("${reportDir}/cpd")
        cpdOutputDir.mkdirs()

        ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask', classpath: configurations.pmd.asPath)

        ant.cpd(minimumTokenCount: '5', format: 'xml', outputFile: new File(cpdOutputDir, 'cpd.xml')) {
            fileset(dir: 'src') {
                include(name: '**/*.java')
            }
        }
    }
}

test {
    ignoreFailures = true
}
